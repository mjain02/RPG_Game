#include "graphics.h"

#include "globals.h"

/*
In this file put all your graphical functions (don't forget to declare them first
in graphics.h). So when you want to draw something use this file. One cool function
to look at would be uLCD.blit() there are more like filled_rectangle etc... 
https://os.mbed.com/users/4180_1/notebook/ulcd-144-g2-128-by-128-color-lcd/
This website is a good resource.
*/

void draw_player(int u, int v, int key)
{
    static int sprite[121] = {
0x00000000, 0x00000000, 0x00000000, 0xff969cba, 0xff969cba, 0xff969cba, 0xff969cba, 0xff969cba, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff969cba, 0xff969cba, 0xff969cba, 0xff969cba, 0xff969cba, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 
0x00000000, 0xffeb6f1f, 0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 0xffeb6f1f, 0x00000000, 
0x00000000, 0xffeb6f1f, 0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 0xffeb6f1f, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 0xffeb6f1f, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 0xffeb6f1f, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};

    uLCD.BLIT(u, v, 11, 11, sprite);
}

#define YELLOW 0xFFFF00
#define BROWN  0xD2691E
#define DIRT   BROWN
#define BLUE   0x0000FF
#define RED    0xFF0000
#define DGREY 0x5F5F5F
#define BLACK 0x000000
void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    // Fill a tile with blackness
    uLCD.filled_rectangle(u, v, u+10, v+10, BLACK);
}

void draw_wall(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, DGREY);
}

void draw_plant(int u, int v)
{
    static int plant[121] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0x00000000, 0x00000000, 
0x00000000, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0x00000000, 
0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff14ff58, 
0xff14ff58, 0xff14ff58, 0xff14ff58, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff14ff58, 0xff14ff58, 0xff14ff58, 
0x00000000, 0xff14ff58, 0xff14ff58, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff14ff58, 0xff14ff58, 0x00000000, 
0x00000000, 0x00000000, 0xff14ff58, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff14ff58, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0xff203f57, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u, v, 11, 11, plant);
}

void draw_rock(int u, int v)
{
    static int rock[121] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 0x00000000, 
0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 
0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 
0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 
0x00000000, 0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0xff899898, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u,v,11,11,rock);
}

void draw_door(int u, int v)
{
    static int door[121] = {
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffc5206c, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffc5206c, 0xffff00cf, 0xffc5206c, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 
0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf, 0xffff00cf
};
    uLCD.BLIT(u,v,11,11,door);
}

void draw_fire(int u, int v)
{
    static int fire[121] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff9ab46, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0xfff9ab46, 0x00000000, 0x00000000, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 0x00000000, 0xfff9ab46, 
0xfff9ab46, 0xfff9ab46, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0xfff9ab46, 0xfff9ab46, 
0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 
0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 
0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 
0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 
0x00000000, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0xfff9ab46, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u,v,11,11,fire);
}


void draw_upper_status()
{
    // Draw bottom border of status bar
    uLCD.line(0, 9, 127, 9, GREEN);
    uLCD.locate(0,0); 
   // uLCD.printf("Score");
    // Add other status info drawing code here
}

void draw_lower_status()
{
    // Draw top border of status bar
    uLCD.line(0, 118, 127, 118, GREEN);
    
    // Add other status info drawing code here
}

void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}

void draw_key(int u, int v)
{
    static int key[121] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0x00000000, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0x00000000, 
0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0x00000000, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0x00000000, 
0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0xff00eaff, 0x00000000, 0x00000000, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0x00000000, 
0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0x00000000, 
0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0xff00eaff, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u,v,11,11,key);
}

void draw_monster(int u, int v)
{
    static int monster[121] = {
0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 
0xff00fffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff00fffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff00fffe, 
0xff00fffe, 0xffffffff, 0xff00fffe, 0xff00fffe, 0xffffffff, 0xff00fffe, 0xffffffff, 0xff00fffe, 0xff00fffe, 0xffffffff, 0xff00fffe, 
0xff00fffe, 0xffffffff, 0xff00fffe, 0xff00fffe, 0xffffffff, 0xff00fffe, 0xffffffff, 0xff000000, 0xff00fffe, 0xffffffff, 0xff00fffe, 
0xff00fffe, 0xffffffff, 0xff000000, 0xff000000, 0xffffffff, 0xff00fffe, 0xffffffff, 0xff000000, 0xff00fffe, 0xffffffff, 0xff00fffe, 
0xff00fffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff00fffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff00fffe, 
0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 
0xff00fffe, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xff00fffe, 
0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xff00fffe, 
0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xffeb5f4a, 0xff00fffe, 
0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe, 0xff00fffe
};
    uLCD.BLIT(u,v,11,11,monster);
}

void draw_exit(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, RED);
}

void draw_water(int u, int v)
{
    static int water[121] = {
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfffeff00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 0x00000000, 
0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 
0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 
0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 
0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 
0x00000000, 0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0xfffeff00, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
    uLCD.BLIT(u,v,11,11,water);
}

void add_fire() {
    //display red across the screen
    uLCD.filled_rectangle(0, 70, 127, 127, RED);
    uLCD.filled_rectangle(36, 35, 90, 70, RED);
    uLCD.filled_rectangle(45, 0, 80, 35, RED);
}

void add_water() {
    //display blue across the screen
    uLCD.filled_rectangle(0, 70, 127, 127, BLUE);
    uLCD.filled_rectangle(36, 35, 90, 70, BLUE);
    uLCD.filled_rectangle(45, 0, 80, 35, BLUE);
}
